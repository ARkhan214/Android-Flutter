import 'package:flutter/material.dart';
import 'package:mk_bank_project/account/profile_page.dart';
import 'package:mk_bank_project/page/loginpage.dart';
import 'package:mk_bank_project/service/authservice.dart';

class AccountsProfile extends StatelessWidget {
  final Map<String, dynamic> profile;
  final AuthService _authService = AuthService();

  AccountsProfile({super.key, required this.profile});

  @override
  Widget build(BuildContext context) {
    final String baseUrl = "http://localhost:8085/images/account/";

    final String? photoName = profile['photo'];

    final String? photoUrl = (photoName != null && photoName.isNotEmpty)
        ? "$baseUrl$photoName"
        : null;

    // return Scaffold(body: Text('Account Holder Profile'));

    return Scaffold(
      appBar: AppBar(
        title: const Text(
          "Account Holder's Profile",
          style: TextStyle(color: Colors.white),
        ),
        backgroundColor: Colors.black12,
        centerTitle: true,
        elevation: 4,
      ),

      // DRAWER: Side navigation menu
      drawer: Drawer(
        child: ListView(
          padding: EdgeInsets.zero,
          children: [
            UserAccountsDrawerHeader(
              decoration: const BoxDecoration(color: Colors.purple),
              accountName: Text(
                profile['name'] ?? 'Unknown User',
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              accountEmail: Text(profile['user']?['email'] ?? 'N/A'),
              currentAccountPicture: CircleAvatar(
                backgroundImage: (photoUrl != null)
                    ? NetworkImage(photoUrl)
                    : const AssetImage('assets/images/default_avatar.png')
                          as ImageProvider, // Default if no photo
              ),
            ),

            //  Menu Items (you can add more later)
            // ListTile(
            //   leading: const Icon(Icons.person),
            //   title: const Text('View Profile'),
            //   onTap: () {
            //     Navigator.pop(context); // Close the drawer
            //   },
            // ),
            ListTile(
              leading: const Icon(Icons.person),
              title: const Text('View Profile'),
              onTap: () {
                Navigator.pop(context);
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const ProfilePage()),
                );
              },
            ),

            ListTile(
              leading: const Icon(Icons.edit),
              title: const Text('Edit Profile'),
              onTap: () {
                // TODO: Add navigation to Edit Profile Page
                Navigator.pop(context);
              },
            ),

            ListTile(
              leading: const Icon(Icons.work),
              title: const Text('Applied Jobs'),
              onTap: () {
                // TODO: Navigate to applied jobs page
                Navigator.pop(context);
              },
            ),

            ListTile(
              leading: const Icon(Icons.settings),
              title: const Text('Settings'),
              onTap: () {
                // TODO: Open settings page
                Navigator.pop(context);
              },
            ),

            const Divider(), // Thin line separator
            //  Logout Option
            ListTile(
              leading: const Icon(Icons.logout, color: Colors.red),
              title: const Text('Logout', style: TextStyle(color: Colors.red)),
              onTap: () async {
                // Clear stored token and user role
                await _authService.logout();

                // Navigate back to login page
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (_) => LoginPage()),
                );
              },
            ),
          ],
        ),
      ),

      // ----------------------------
      // BODY: Main content area
      // ----------------------------
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Card(
              elevation: 5,
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(12),
              ),
              child: Padding(
                padding: const EdgeInsets.all(16.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.stretch,
                  children: [
                    // Top Row: Photo + Name/ID/Status + Balance
                    Row(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        // Column 1: Profile Photo
                        Container(
                          width: 80,
                          height: 80,
                          decoration: BoxDecoration(
                            shape: BoxShape.circle,
                            border: Border.all(color: Colors.purple, width: 2),
                            boxShadow: [
                              BoxShadow(
                                color: Colors.black26,
                                blurRadius: 5,
                                offset: Offset(0, 3),
                              ),
                            ],
                          ),
                          child: CircleAvatar(
                            radius: 40,
                            backgroundColor: Colors.grey[200],
                            backgroundImage: (photoUrl != null)
                                ? NetworkImage(photoUrl)
                                : const AssetImage('assets/default_avatar.png')
                                      as ImageProvider,
                          ),
                        ),
                        const SizedBox(width: 16),
                        // Column 2: Name, ID, Status
                        Expanded(
                          flex: 3,
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                profile['name'] ?? 'Unknown',
                                style: const TextStyle(
                                  fontSize: 20,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                              const SizedBox(height: 6),
                              Text(
                                "ID: ${profile['id'] ?? 'N/A'}",
                                style: TextStyle(
                                  fontSize: 16,
                                  color: Colors.grey[700],
                                ),
                              ),
                              const SizedBox(height: 6),
                              Text(
                                "Status: ${(profile['accountActiveStatus'] == true) ? 'Active ✅' : 'Inactive ❌'}",
                                style: TextStyle(
                                  fontSize: 16,
                                  color: (profile['active'] == true)
                                      ? Colors.green
                                      : Colors.red,
                                ),
                              ),
                            ],
                          ),
                        ),
                        // Column 3: Balance
                        Expanded(
                          flex: 1,
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.end,
                            children: [
                              Text(
                                "Balance",
                                style: TextStyle(
                                  fontSize: 14,
                                  color: Colors.grey[600],
                                  fontWeight: FontWeight.w500,
                                ),
                              ),
                              const SizedBox(height: 6),
                              Text(
                                "${profile['balance'] ?? 'N/A'}",
                                style: const TextStyle(
                                  fontSize: 18,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ],
                          ),
                        ),
                      ],
                    ),

                    const SizedBox(height: 10),

                    // View Details inside the same card
                    Card(
                      color: Colors.grey[100],
                      elevation: 0,
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: ExpansionTile(
                        title: const Text(
                          "View Details",
                          style: TextStyle(fontWeight: FontWeight.bold),
                        ),
                        children: [
                          ListTile(
                            title: Text("NID: ${profile['nid'] ?? 'N/A'}"),
                          ),
                          ListTile(
                            title: Text(
                              "Phone: ${profile['phoneNumber'] ?? 'N/A'}",
                            ),
                          ),
                          ListTile(
                            title: Text(
                              "Address: ${profile['address'] ?? 'N/A'}",
                            ),
                          ),
                          ListTile(
                            title: Text(
                              "Date of Birth: ${profile['dateOfBirth'] != null ? profile['dateOfBirth'].toString().substring(0, 10) : 'N/A'}",
                            ),
                          ),
                          ListTile(
                            title: Text(
                              "Account Opening Date: ${profile['accountOpeningDate'] != null ? profile['accountOpeningDate'].toString().substring(0, 10) : 'N/A'}",
                            ),
                          ),
                          ListTile(
                            title: Text("Role: ${profile['role'] ?? 'N/A'}"),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
            ),

            //===============
            const SizedBox(height: 30),

            // Edit Profile Button
            ElevatedButton.icon(
              onPressed: () {
                // TODO: Add edit functionality or navigation
              },
              icon: const Icon(Icons.edit),
              label: const Text("Edit Profile"),
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.purple,
                foregroundColor: Colors.white,
                padding: const EdgeInsets.symmetric(
                  horizontal: 30,
                  vertical: 12,
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}



======================
===============profile page=======
========================

import 'package:flutter/material.dart';
import 'package:mk_bank_project/entity/profile_model.dart';
import '../service/authservice.dart';

class ProfilePage extends StatefulWidget {
  const ProfilePage({super.key});

  @override
  State<ProfilePage> createState() => _ProfilePageState();
}

class _ProfilePageState extends State<ProfilePage> {
  final AuthService _authService = AuthService();
  late Future<Profile> _profileFuture;

  @override
  void initState() {
    super.initState();
    _profileFuture = _authService.fetchUserProfile();
  }

  @override
  Widget build(BuildContext context) {
    final String baseUrl = "http://localhost:8085/images/user/";

    return Scaffold(
      appBar: AppBar(title: const Text("My Profile")),
      body: FutureBuilder<Profile>(
        future: _profileFuture,
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return const Center(child: CircularProgressIndicator());
          } else if (snapshot.hasError) {
            return Center(child: Text('Error: ${snapshot.error}'));
          } else if (!snapshot.hasData) {
            return const Center(child: Text('No profile data found.'));
          }

          final profile = snapshot.data!;

          // Photo URL logic
          final String? photoName = profile.photo;
          final String? photoUrl = (photoName != null && photoName.isNotEmpty)
              ? "$baseUrl$photoName"
              : null;

          return Padding(
            padding: const EdgeInsets.all(16.0),
            child: ListView(
              children: [
                // Photo Part: Without proper circular & zoom

                // Container(
                //   decoration: BoxDecoration(
                //     shape: BoxShape.circle,
                //     boxShadow: [
                //       BoxShadow(
                //         color: Colors.black26,
                //         blurRadius: 8,
                //         offset: Offset(0, 4),
                //       ),
                //     ],
                //     border: Border.all(color: Colors.purple, width: 3),
                //   ),
                //   child: CircleAvatar(
                //     radius: 60,
                //     backgroundColor: Colors.grey[200],
                //     backgroundImage: (photoUrl != null)
                //         ? NetworkImage(photoUrl)
                //         : const AssetImage('assets/images/default_avatar.png')
                //               as ImageProvider,
                //   ),
                // ),

                // Fixed Photo Part: proper circular & zoom
                Center(
                  child: Container(
                    width: 120,
                    height: 120,
                    decoration: BoxDecoration(
                      shape: BoxShape.circle,
                      border: Border.all(color: Colors.purple, width: 3),
                      boxShadow: [
                        BoxShadow(
                          color: Colors.black26,
                          blurRadius: 8,
                          offset: Offset(0, 4),
                        ),
                      ],
                    ),
                    child: ClipOval(
                      child: (photoUrl != null)
                          ? Image.network(
                        photoUrl,
                        fit: BoxFit.cover, // <-- fixes zoom
                        width: 120,
                        height: 120,
                      )
                          : Image.asset(
                        'assets/images/default_avatar.png',
                        fit: BoxFit.cover,
                        width: 120,
                        height: 120,
                      ),
                    ),
                  ),
                ),

                const SizedBox(height: 20),

                Text(
                  profile.name,
                  style: const TextStyle(
                    fontSize: 22,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                const SizedBox(height: 10),
                Text("Email: ${profile.email}"),
                Text("Phone: ${profile.phoneNumber}"),
                Text("Role: ${profile.role}"),
                Text("Active: ${profile.active}"),
                Text("Enabled: ${profile.enabled}"),
                Text("Date of Birth: ${profile.dateOfBirth.split("T")[0]}"),
              ],
            ),
          );
        },
      ),
    );
  }
}
