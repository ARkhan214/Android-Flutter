===============================Last=====
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
// *** Fix: Removed carousel_slider import entirely ***
import 'package:mk_bank_project/account/profile_page.dart';
import 'package:mk_bank_project/page/fixed_deposit_page.dart';
import 'package:mk_bank_project/page/loginpage.dart';
import 'package:mk_bank_project/page/transfer_money_page.dart';
import 'package:mk_bank_project/page/withdraw_page.dart';
import 'package:mk_bank_project/service/authservice.dart';

// ----------------------------------------------------------------------
// Custom Color Setup (Matching the bKash-like UI)
// ----------------------------------------------------------------------

// Primary Pink Color
const Color kPrimaryPink = Color(0xFFE91E63);
// Secondary Reddish/Orange Color
const Color kSecondaryRed = Color(0xFFE8112D);
// Yellow for offers/highlights
const Color kAccentYellow = Color(0xFFF9B208);

// ----------------------------------------------------------------------

// Changed to StatefulWidget to manage balance visibility
class AccountsProfile extends StatefulWidget {
  final Map<String, dynamic> profile;

  const AccountsProfile({super.key, required this.profile});

  @override
  State<AccountsProfile> createState() => _AccountsProfileState();
}

class _AccountsProfileState extends State<AccountsProfile> {
  final AuthService _authService = AuthService();

  // State to manage balance visibility
  bool _showBalance = false;

  // Image URLs for the Carousel (Now unused, but kept for future reference)
  final List<String> carouselImageUrls = [
    'https://picsum.photos/id/237/800/200',
    'https://picsum.photos/id/10/800/200',
    'https://picsum.photos/id/50/800/200',
  ];

  @override
  Widget build(BuildContext context) {
    // Access profile using widget.profile
    final double screenWidth = MediaQuery.of(context).size.width;
    final double fontScale = screenWidth / 390; // responsive scaling

    final String baseUrl = "http://localhost:8085/images/account/";
    final String? photoName = widget.profile['photo'];
    final String? photoUrl =
    (photoName != null && photoName.isNotEmpty) ? "$baseUrl$photoName" : null;

    final String balance = widget.profile['balance']?.toStringAsFixed(2) ?? '0.00';
    final String maskedBalance = '৳ *****';
    final String displayBalance = _showBalance ? '৳ $balance' : maskedBalance;

    // Core logic for status (kept from your original code)
    final bool isActive = widget.profile['accountActiveStatus'] == true;
    final String statusText = isActive ? 'Active' : 'Inactive';
    final Color statusColor = isActive ? Colors.green.shade600 : Colors.red.shade600;


    return WillPopScope(
      onWillPop: () async {
        Navigator.pop(context, true);
        return false;
      },
      child: Scaffold(
        backgroundColor: Colors.white,

        // ** The entire UI does not use a traditional AppBar, it uses the body. **
        appBar: AppBar(
          automaticallyImplyLeading: false, // Remove default back button
          toolbarHeight: 0,
          backgroundColor: Colors.transparent,
          elevation: 0,
        ),

        // ** Drawer Menu (Kept your original implementation) **
        drawer: Drawer(
          child: ListView(
            padding: EdgeInsets.zero,
            children: [
              UserAccountsDrawerHeader(
                decoration: BoxDecoration(color: kPrimaryPink),
                accountName: Text(
                  widget.profile['name'] ?? 'Unknown User',
                  style: TextStyle(
                    fontWeight: FontWeight.bold,
                    fontSize: 17 * fontScale,
                  ),
                ),
                accountEmail: Text(
                  widget.profile['user']?['email'] ?? 'N/A',
                  style: TextStyle(fontSize: 14 * fontScale),
                ),
                currentAccountPicture: CircleAvatar(
                  backgroundColor: Colors.white,
                  child: CircleAvatar(
                    radius: 35,
                    backgroundImage: (photoUrl != null)
                        ? NetworkImage(photoUrl)
                        : const AssetImage('assets/images/default_avatar.png')
                    as ImageProvider,
                  ),
                ),
              ),
              ListTile(
                leading: const Icon(Icons.person, color: kPrimaryPink),
                title: Text(
                  'View Profile',
                  style: TextStyle(fontSize: 15 * fontScale),
                ),
                onTap: () {
                  Navigator.pop(context);
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => const ProfilePage(),
                    ),
                  );
                },
              ),
              ListTile(
                leading: const Icon(Icons.logout, color: kSecondaryRed),
                title: Text(
                  'Logout',
                  style: TextStyle(
                    color: kSecondaryRed,
                    fontWeight: FontWeight.w600,
                    fontSize: 15 * fontScale,
                  ),
                ),
                onTap: () async {
                  await _authService.logout();
                  // Note: Removed the unused 'accentColor' variable
                  Navigator.pushReplacement(
                    context,
                    MaterialPageRoute(builder: (_) => LoginPage()),
                  );
                },
              ),
            ],
          ),
        ),

        // ------------------ Body Section ------------------
        body: SingleChildScrollView(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              // ** Top Header Section (Matching the Image) **
              _buildTopHeader(context, photoUrl, fontScale),

              // ** Dashboard Menu Icons **
              _buildDashboardMenu(context, fontScale),

              // ** See More Button **
              _buildSeeMoreButton(fontScale),

              const Divider(height: 1, thickness: 0.5, color: Colors.grey),

              const SizedBox(height: 10),

              // ** Carousel Slider Section (Now a Placeholder) **
              _buildCarouselPlaceholder(fontScale),

              const SizedBox(height: 20),

              // ** Offer/Shortcut Section **
              _buildOfferShortcutSection(fontScale),

              const SizedBox(height: 20),
            ],
          ),
        ),
      ),
    );
  }

  // ------------------ 4. Carousel Placeholder Section ------------------
  // Replaced the buggy CarouselSlider with a simple ad banner
  Widget _buildCarouselPlaceholder(double fontScale) {
    return Padding(
      padding: EdgeInsets.symmetric(horizontal: 16 * fontScale),
      child: Container(
        height: 120 * fontScale,
        alignment: Alignment.center,
        decoration: BoxDecoration(
          color: kAccentYellow.withOpacity(0.2),
          borderRadius: BorderRadius.circular(10),
          border: Border.all(color: kAccentYellow, width: 2),
        ),
        child: Text(
          "অফার ব্যানার (Carousel Removed)", // Offer Banner
          style: TextStyle(
            fontSize: 16 * fontScale,
            fontWeight: FontWeight.bold,
            color: kAccentYellow,
          ),
        ),
      ),
    );
  }

  // ------------------ 1. Top Header Section ------------------
  Widget _buildTopHeader(BuildContext context, String? photoUrl, double fontScale) {
    return Container(
      padding: EdgeInsets.fromLTRB(16, 12, 16, 20),
      color: kPrimaryPink, // Pink background
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              // ** Profile Photo (Clickable for Drawer) **
              GestureDetector(
                onTap: () => Scaffold.of(context).openDrawer(),
                child: CircleAvatar(
                  radius: 25 * fontScale,
                  backgroundColor: Colors.white,
                  backgroundImage: (photoUrl != null)
                      ? NetworkImage(photoUrl)
                      : const AssetImage('assets/images/default_avatar.png')
                  as ImageProvider,
                ),
              ),
              // ** Top Right Icons **
              Row(
                children: [
                  Icon(Icons.star_border, color: Colors.white, size: 24 * fontScale),
                  SizedBox(width: 15),
                  Icon(Icons.qr_code_scanner, color: Colors.white, size: 24 * fontScale),
                  SizedBox(width: 5),
                ],
              ),
            ],
          ),

          SizedBox(height: 10),

          // ** Name and Balance Section **
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              // ** User Name **
              Text(
                widget.profile['name'] ?? 'MK Bank User',
                style: GoogleFonts.poppins(
                  color: Colors.white,
                  fontSize: 18 * fontScale,
                  fontWeight: FontWeight.bold,
                ),
              ),
              // ** Notification Icon **
              Icon(Icons.notifications_none, color: Colors.white, size: 24 * fontScale),
            ],
          ),

          SizedBox(height: 10),

          // ** Balance Section with Hide/Show Functionality **
          GestureDetector(
            onTap: () {
              // Balance show/hide logic
              setState(() {
                _showBalance = !_showBalance;
              });
            },
            child: Container(
              padding: EdgeInsets.symmetric(horizontal: 12, vertical: 8),
              decoration: BoxDecoration(
                color: Colors.white.withOpacity(0.3),
                borderRadius: BorderRadius.circular(20),
              ),
              child: Row(
                mainAxisSize: MainAxisSize.min,
                children: [
                  Text(
                    _showBalance
                        ? '৳ ${widget.profile['balance']?.toStringAsFixed(2) ?? '0.00'}'
                        : '৳ *****',
                    style: GoogleFonts.poppins(
                      color: Colors.white,
                      fontSize: 16 * fontScale,
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                  SizedBox(width: 8),
                  Text(
                    "ব্যালেন্স দেখুন", // "View Balance" in Bangla
                    style: GoogleFonts.poppins(
                      color: Colors.white,
                      fontSize: 14 * fontScale,
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                  Icon(
                    _showBalance ? Icons.visibility_off : Icons.visibility,
                    color: Colors.white,
                    size: 18 * fontScale,
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }

  // ------------------ 2. Dashboard Menu Icons ------------------
  // 4x2 grid of buttons (matching the image)
  Widget _buildDashboardMenu(BuildContext context, double fontScale) {
    // List of menu items to generate the 4x2 grid
    final List<Map<String, dynamic>> menuItems = [
      {'title': 'Send Money', 'icon': Icons.send_outlined, 'color': Colors.redAccent, 'page': const TransferMoneyPage()},
      {'title': 'Mobile Recharge', 'icon': Icons.phone_android, 'color': Colors.lightGreen, 'page': const TransferMoneyPage()},
      {'title': 'Cash Out', 'icon': Icons.account_balance_wallet_outlined, 'color': Colors.teal, 'page': const WithdrawPage()},
      {'title': 'Payment', 'icon': Icons.payment_outlined, 'color': Colors.purpleAccent, 'page': const WithdrawPage()},
      {'title': 'Add Money', 'icon': Icons.add_card, 'color': Colors.blueAccent, 'page': const TransferMoneyPage()},
      {'title': 'Pay Bill', 'icon': Icons.lightbulb_outline, 'color': Colors.indigo, 'page': const WithdrawPage()},
      {'title': 'Savings', 'icon': Icons.savings_outlined, 'color': Colors.pink, 'page': const WithdrawPage()},
      {'title': 'Loan', 'icon': Icons.money_outlined, 'color': Colors.brown, 'page': const WithdrawPage()},
    ];

    return Padding(
      padding: EdgeInsets.symmetric(horizontal: 10 * fontScale, vertical: 10 * fontScale),
      child: GridView.builder(
        physics: const NeverScrollableScrollPhysics(), // Disable GridView scrolling
        shrinkWrap: true,
        itemCount: 8,
        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 4,
          childAspectRatio: 0.8, // Adjust ratio to fit title below icon
          crossAxisSpacing: 5 * fontScale,
          mainAxisSpacing: 10 * fontScale,
        ),
        itemBuilder: (context, index) {
          final item = menuItems[index];
          return _buildMenuItem(
              context,
              item['title'],
              item['icon'],
              item['color'],
              fontScale,
              item['page']
          );
        },
      ),
    );
  }

  // Helper Widget for a single Menu Item
  Widget _buildMenuItem(BuildContext context, String title, IconData icon, Color color, double fontScale, Widget page) {
    return GestureDetector(
      onTap: () {
        Navigator.push(context, MaterialPageRoute(builder: (_) => page));
      },
      child: Column(
        mainAxisAlignment: MainAxisAlignment.start,
        children: [
          Container(
            padding: EdgeInsets.all(12 * fontScale),
            decoration: BoxDecoration(
              color: color.withOpacity(0.1),
              shape: BoxShape.circle,
            ),
            child: Icon(icon, size: 25 * fontScale, color: color),
          ),
          SizedBox(height: 5 * fontScale),
          Text(
            title,
            textAlign: TextAlign.center,
            style: TextStyle(
              fontSize: 12 * fontScale,
              color: Colors.black87,
              fontWeight: FontWeight.w500,
            ),
          ),
        ],
      ),
    );
  }

  // ------------------ 3. See More Button ------------------
  Widget _buildSeeMoreButton(double fontScale) {
    return Padding(
      padding: EdgeInsets.symmetric(vertical: 5 * fontScale),
      child: TextButton.icon(
        onPressed: () { /* Add your logic for 'See More' */ },
        icon: Icon(Icons.keyboard_arrow_down, size: 20 * fontScale, color: kPrimaryPink),
        label: Text(
          "আরও দেখুন", // "See More" in Bangla
          style: TextStyle(
            color: kPrimaryPink,
            fontWeight: FontWeight.bold,
            fontSize: 14 * fontScale,
          ),
        ),
      ),
    );
  }

  // ------------------ 5. Offer/Shortcut Section ------------------
  Widget _buildOfferShortcutSection(double fontScale) {
    return Padding(
      padding: EdgeInsets.symmetric(horizontal: 16 * fontScale),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Text(
                "আমার অফারস", // "My Offers" in Bangla
                style: GoogleFonts.poppins(
                  fontSize: 16 * fontScale,
                  fontWeight: FontWeight.bold,
                  color: Colors.black87,
                ),
              ),
              TextButton.icon(
                onPressed: () {},
                icon: Icon(Icons.edit, size: 16 * fontScale, color: Colors.grey.shade600),
                label: Text(
                  "এডিট", // "Edit" in Bangla
                  style: TextStyle(color: Colors.grey.shade600),
                ),
              ),
            ],
          ),

          SizedBox(height: 10 * fontScale),

          // ** Horizontal List of Shortcuts (as seen in the image) **
          SizedBox(
            height: 110 * fontScale,
            child: ListView(
              scrollDirection: Axis.horizontal,
              children: [
                _buildShortcutCard("মাই অফারস\নদেখতে ট্যাপ করুন", Icons.card_giftcard, kPrimaryPink, fontScale),
                SizedBox(width: 15 * fontScale),
                _buildShortcutCard("NSI Ass. Direct...", Icons.access_time_filled, Colors.lightGreen, fontScale),
                SizedBox(width: 15 * fontScale),
                _buildShortcutCard("বিকাশ বান্ডেল", Icons.shopping_basket_outlined, Colors.purple, fontScale),
                SizedBox(width: 15 * fontScale),
                _buildShortcutCard("জিপি মাই অফার", Icons.local_offer_outlined, Colors.blue, fontScale),
              ],
            ),
          ),
        ],
      ),
    );
  }

  // Helper Widget for Shortcut Cards
  Widget _buildShortcutCard(String title, IconData icon, Color iconColor, double fontScale) {
    return Container(
      width: 100 * fontScale,
      padding: EdgeInsets.all(8 * fontScale),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(10),
        border: Border.all(color: Colors.grey.shade200),
        boxShadow: [
          BoxShadow(
            color: Colors.grey.withOpacity(0.1),
            blurRadius: 4,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            padding: EdgeInsets.all(5),
            decoration: BoxDecoration(
              color: iconColor.withOpacity(0.15),
              borderRadius: BorderRadius.circular(5),
            ),
            child: Icon(icon, color: iconColor, size: 24 * fontScale),
          ),
          SizedBox(height: 10 * fontScale),
          Text(
            title,
            style: TextStyle(
              fontSize: 12 * fontScale,
              fontWeight: FontWeight.w500,
              color: Colors.black87,
            ),
          ),
        ],
      ),
    );
  }

  // ---------------- Detail Tile (Kept as is) ----------------
  Widget _buildDetailTile(
      BuildContext context,
      String label,
      dynamic value,
      double fontScale, {
        bool isDate = false,
      }) {
    String displayValue = 'N/A';
    if (value != null) {
      displayValue =
      isDate ? value.toString().substring(0, 10) : value.toString();
    }

    return Padding(
      padding:
      EdgeInsets.symmetric(horizontal: 14.0 * fontScale, vertical: 3.0 * fontScale),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(
            "$label:",
            style: TextStyle(
              fontSize: 14 * fontScale,
              color: Colors.grey.shade700,
              fontWeight: FontWeight.w500,
            ),
          ),
          Flexible(
            child: Text(
              displayValue,
              textAlign: TextAlign.right,
              style: TextStyle(
                fontSize: 14 * fontScale,
                color: Colors.black87,
                fontWeight: FontWeight.w600,
              ),
            ),
          ),
        ],
      ),
    );
  }
}
=========17/0/2025===========
import 'package:flutter/material.dart';
import 'package:mk_bank_project/account/profile_page.dart';
import 'package:mk_bank_project/page/fixed_deposit_page.dart';
import 'package:mk_bank_project/page/loginpage.dart';
import 'package:mk_bank_project/page/transfer_money_page.dart';
import 'package:mk_bank_project/page/withdraw_page.dart';
import 'package:mk_bank_project/service/authservice.dart';

// ----------------------------------------------------------------------
// Custom Color Setup
// ----------------------------------------------------------------------

const int _primaryValue = 0xFF004D40; // Dark Teal/Green
const MaterialColor primaryColor = MaterialColor(_primaryValue, <int, Color>{
  50: Color(0xFFE0F2F1),
  100: Color(0xFFB2DFDB),
  200: Color(0xFF80CBC4),
  300: Color(0xFF4DB6AC),
  400: Color(0xFF26A69A),
  500: Color(_primaryValue),
  600: Color(0xFF00897B),
  700: Color(0xFF00796B),
  800: Color(0xFF00695C),
  900: Color(0xFF004D40),
});

const Color accentColor = Color(0xFFE57373); // Light Red/Coral

// ----------------------------------------------------------------------

class AccountsProfile extends StatelessWidget {
  final Map<String, dynamic> profile;
  final AuthService _authService = AuthService();

  AccountsProfile({super.key, required this.profile});

  @override
  Widget build(BuildContext context) {
    final double screenWidth = MediaQuery.of(context).size.width;
    final double screenHeight = MediaQuery.of(context).size.height;
    final double fontScale = screenWidth / 390; // responsive scaling

    final String baseUrl = "http://localhost:8085/images/account/";
    final String? photoName = profile['photo'];
    final String? photoUrl =
    (photoName != null && photoName.isNotEmpty) ? "$baseUrl$photoName" : null;

    final bool isActive = profile['accountActiveStatus'] == true;
    final String statusText = isActive ? 'Active' : 'Inactive';
    final Color statusColor =
    isActive ? Colors.green.shade600 : Colors.red.shade600;

    return WillPopScope(
      onWillPop: () async {
        Navigator.pop(context, true);
        return false;
      },
      child: Scaffold(
        backgroundColor: Colors.grey.shade50,
        appBar: AppBar(
          title: Text(
            "MK Bank",
            style: TextStyle(
              color: Colors.white,
              fontWeight: FontWeight.w600,
              fontSize: 18 * fontScale,
            ),
          ),
          backgroundColor: primaryColor,
          centerTitle: true,
          elevation: 8,
          iconTheme: const IconThemeData(color: Colors.white),
        ),

        // Drawer Menu
        drawer: Drawer(
          child: ListView(
            padding: EdgeInsets.zero,
            children: [
              UserAccountsDrawerHeader(
                decoration: BoxDecoration(color: primaryColor.shade700),
                accountName: Text(
                  profile['name'] ?? 'Unknown User',
                  style: TextStyle(
                    fontWeight: FontWeight.bold,
                    fontSize: 17 * fontScale,
                  ),
                ),
                accountEmail: Text(
                  profile['user']?['email'] ?? 'N/A',
                  style: TextStyle(fontSize: 14 * fontScale),
                ),
                currentAccountPicture: CircleAvatar(
                  backgroundColor: Colors.white,
                  child: CircleAvatar(
                    radius: 35,
                    backgroundImage: (photoUrl != null)
                        ? NetworkImage(photoUrl)
                        : const AssetImage('assets/images/default_avatar.png')
                    as ImageProvider,
                  ),
                ),
              ),
              ListTile(
                leading: Icon(Icons.person, color: primaryColor),
                title: Text(
                  'View Profile',
                  style: TextStyle(fontSize: 15 * fontScale),
                ),
                onTap: () {
                  Navigator.pop(context);
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => const ProfilePage(),
                    ),
                  );
                },
              ),
              ListTile(
                leading: const Icon(Icons.logout, color: accentColor),
                title: Text(
                  'Logout',
                  style: TextStyle(
                    color: accentColor,
                    fontWeight: FontWeight.w600,
                    fontSize: 15 * fontScale,
                  ),
                ),
                onTap: () async {
                  await _authService.logout();
                  Navigator.pushReplacement(
                    context,
                    MaterialPageRoute(builder: (_) => LoginPage()),
                  );
                },
              ),
            ],
          ),
        ),

        // ------------------ Body Section ------------------
        body: SingleChildScrollView(
          padding: EdgeInsets.all(16.0 * fontScale),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              // Profile Card
              Card(
                elevation: 8,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(15),
                ),
                child: Padding(
                  padding: EdgeInsets.all(16.0 * fontScale),
                  child: Column(
                    children: [
                      Row(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Container(
                            width: 75 * fontScale,
                            height: 75 * fontScale,
                            decoration: BoxDecoration(
                              shape: BoxShape.circle,
                              border: Border.all(color: primaryColor, width: 2),
                              boxShadow: const [
                                BoxShadow(
                                  color: Colors.black26,
                                  blurRadius: 8,
                                  offset: Offset(0, 4),
                                ),
                              ],
                            ),
                            child: ClipOval(
                              child: CircleAvatar(
                                backgroundImage: (photoUrl != null)
                                    ? NetworkImage(photoUrl)
                                    : const AssetImage(
                                    'assets/images/default_avatar.png')
                                as ImageProvider,
                              ),
                            ),
                          ),
                          SizedBox(width: 12 * fontScale),
                          Expanded(
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Text(
                                  profile['name'] ?? 'Unknown',
                                  style: TextStyle(
                                    fontSize: 18 * fontScale,
                                    fontWeight: FontWeight.bold,
                                  ),
                                ),
                                SizedBox(height: 4 * fontScale),
                                Text(
                                  "Account No: ${profile['id'] ?? 'N/A'}",
                                  style: TextStyle(
                                      color: Colors.grey[700],
                                      fontSize: 13 * fontScale),
                                ),
                                SizedBox(height: 6 * fontScale),
                                Container(
                                  padding: EdgeInsets.symmetric(
                                    horizontal: 10 * fontScale,
                                    vertical: 3 * fontScale,
                                  ),
                                  decoration: BoxDecoration(
                                    color: statusColor.withOpacity(0.1),
                                    borderRadius: BorderRadius.circular(20),
                                    border: Border.all(
                                      color: statusColor,
                                      width: 1,
                                    ),
                                  ),
                                  child: Text(
                                    "Status: $statusText",
                                    style: TextStyle(
                                      color: statusColor,
                                      fontWeight: FontWeight.bold,
                                      fontSize: 13 * fontScale,
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ),
                          Column(
                            crossAxisAlignment: CrossAxisAlignment.end,
                            children: [
                              Text(
                                "Balance",
                                style: TextStyle(
                                  color: Colors.grey,
                                  fontSize: 13 * fontScale,
                                ),
                              ),
                              SizedBox(height: 4 * fontScale),
                              Text(
                                "৳ ${profile['balance']?.toStringAsFixed(2) ?? 'N/A'}",
                                style: TextStyle(
                                  color: primaryColor,
                                  fontSize: 18 * fontScale,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                      SizedBox(height: 15 * fontScale),
                      ExpansionTile(
                        title: Text(
                          "View Account Details",
                          style: TextStyle(
                            color: primaryColor,
                            fontWeight: FontWeight.w700,
                            fontSize: 16 * fontScale,
                          ),
                        ),
                        children: [
                          _buildDetailTile(context, "NID", profile['nid'], fontScale),
                          _buildDetailTile(
                              context, "Phone", profile['phoneNumber'], fontScale),
                          _buildDetailTile(
                              context, "Address", profile['address'], fontScale),
                          _buildDetailTile(context, "Date of Birth",
                              profile['dateOfBirth'], fontScale,
                              isDate: true),
                          _buildDetailTile(context, "Opening Date",
                              profile['accountOpeningDate'], fontScale,
                              isDate: true),
                          _buildDetailTile(context, "Role",
                              profile['role'] ?? 'User', fontScale),
                        ],
                      ),
                    ],
                  ),
                ),
              ),

              SizedBox(height: 20 * fontScale),

              // ------------------ Dashboard Buttons ------------------
              Card(
                elevation: 8,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(15),
                ),
                child: Padding(
                  padding: EdgeInsets.all(10.0 * fontScale),
                  child: Column(
                    children: [
                      SizedBox(height: 10 * fontScale),

                      // --------- Rows ----------
                      ..._buildDashboardRows(context, fontScale),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  // -------------- Reusable Dashboard Rows ------------------
  List<Widget> _buildDashboardRows(BuildContext context, double fontScale) {
    return [
      Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: [
          Expanded(
            child: _buildDashboardButton(context, "Send Money",
                imageUrl:
                "https://cdn-icons-png.flaticon.com/128/10614/10614665.png",
                color: Colors.brown,
                fontScale: fontScale,
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => const TransferMoneyPage()),
                  );
                }),
          ),
          SizedBox(width: 8 * fontScale),
          Expanded(
            child: _buildDashboardButton(context, "Mobile Recharge",
                imageUrl:
                "https://cdn-icons-png.flaticon.com/128/7732/7732360.png",
                fontScale: fontScale,
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => const TransferMoneyPage()),
                  );
                }),
          ),
          SizedBox(width: 8 * fontScale),
          Expanded(
            child: _buildDashboardButton(context, "Cash Out",
                imageUrl:
                "https://cdn-icons-png.flaticon.com/128/8552/8552942.png",
                color: Colors.deepOrange,
                fontScale: fontScale,
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => const WithdrawPage()),
                  );
                }),
          ),
        ],
      ),
      SizedBox(height: 12 * fontScale),
      Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: [
          Expanded(
            child: _buildDashboardButton(context, "Transactions",
                imageUrl:
                "https://cdn-icons-png.flaticon.com/128/16993/16993830.png",
                color: Colors.deepOrange,
                fontScale: fontScale,
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => const WithdrawPage()),
                  );
                }),
          ),
          SizedBox(width: 8 * fontScale),
          Expanded(
            child: _buildDashboardButton(context, "Pay Bill",
                imageUrl:
                "https://cdn-icons-png.flaticon.com/128/2058/2058414.png",
                color: Colors.black54,
                fontScale: fontScale,
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => const WithdrawPage()),
                  );
                }),
          ),
          SizedBox(width: 8 * fontScale),
          Expanded(
            child: _buildDashboardButton(context, "Savings",
                imageUrl:
                "https://cdn-icons-png.flaticon.com/128/12771/12771603.png",
                color: Colors.blueGrey,
                fontScale: fontScale,
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => const WithdrawPage()),
                  );
                }),
          ),
        ],
      ),
      SizedBox(height: 12 * fontScale),
      Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: [
          Expanded(
            child: _buildDashboardButton(context, "Loan",
                imageUrl:
                "https://cdn-icons-png.flaticon.com/128/5571/5571405.png",
                color: Colors.green,
                fontScale: fontScale,
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => const WithdrawPage()),
                  );
                }),
          ),
          SizedBox(width: 8 * fontScale),
          Expanded(
            child: _buildDashboardButton(context, "Fixed Deposit",
                imageUrl:
                "https://cdn-icons-png.flaticon.com/128/5755/5755328.png",
                color: Colors.blueGrey,
                fontScale: fontScale,
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => const FixedDepositPage()),
                  );
                }),
          ),
          SizedBox(width: 8 * fontScale),
          Expanded(
            child: _buildDashboardButton(context, "Logout",
                imageUrl:
                "https://cdn-icons-png.flaticon.com/128/1828/1828479.png",
                color: Colors.red,
                fontScale: fontScale,
                onPressed: () async {
                  await _authService.logout();
                  Navigator.pushReplacement(
                    context,
                    MaterialPageRoute(builder: (_) => LoginPage()),
                  );
                }),
          ),
        ],
      ),
    ];
  }

  // ---------------- Dashboard Button ----------------
  Widget _buildDashboardButton(
      BuildContext context,
      String title, {
        IconData? icon,
        String? imageUrl,
        Color? color,
        required double fontScale,
        required VoidCallback onPressed,
      }) {
    return ElevatedButton(
      style: ElevatedButton.styleFrom(
        backgroundColor: color ?? Theme.of(context).primaryColor,
        padding:
        EdgeInsets.symmetric(vertical: 16 * fontScale, horizontal: 8 * fontScale),
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      ),
      onPressed: onPressed,
      child: Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          if (imageUrl != null)
            Image.network(imageUrl,
                height: 25 * fontScale, width: 25 * fontScale, color: Colors.white)
          else if (icon != null)
            Icon(icon, size: 25 * fontScale, color: Colors.white),
          SizedBox(height: 6 * fontScale),
          Text(
            title,
            textAlign: TextAlign.center,
            style: TextStyle(fontSize: 13 * fontScale, color: Colors.white),
          ),
        ],
      ),
    );
  }

  // ---------------- Detail Tile ----------------
  Widget _buildDetailTile(
      BuildContext context,
      String label,
      dynamic value,
      double fontScale, {
        bool isDate = false,
      }) {
    String displayValue = 'N/A';
    if (value != null) {
      displayValue =
      isDate ? value.toString().substring(0, 10) : value.toString();
    }

    return Padding(
      padding:
      EdgeInsets.symmetric(horizontal: 14.0 * fontScale, vertical: 3.0 * fontScale),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(
            "$label:",
            style: TextStyle(
              fontSize: 14 * fontScale,
              color: Colors.grey.shade700,
              fontWeight: FontWeight.w500,
            ),
          ),
          Flexible(
            child: Text(
              displayValue,
              textAlign: TextAlign.right,
              style: TextStyle(
                fontSize: 14 * fontScale,
                color: Colors.black87,
                fontWeight: FontWeight.w600,
              ),
            ),
          ),
        ],
      ),
    );
  }
}